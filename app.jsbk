const express = require('express');
const axios = require('axios');
const bodyParser = require('body-parser');

const app = express();
app.use(bodyParser.urlencoded({ extended: false }));
app.get('/', (req, res) => {
    res.send(`
      <form action="/check" method="post">
        <textarea name="proxies" placeholder="Proxies (one per line, in the format of ip:port:username:password)"></textarea>
        <button type="submit">Submit</button>
      </form>
      <div id="results"></div>
    `);
  });
  const async = require('async');

  app.post('/check', (req, res) => {
    const proxies = req.body.proxies.replace(/\r/g, '').split('\n');
    const target = 'http://www.google.com';
  
    let workingProxies = [];
    let failedProxies = [];
    async.eachLimit(proxies, 10, (proxy, callback) => {
      const [host, port, username, password] = proxy.split(':');
      const config = {
        proxy: {
          host: host,
          port: parseInt(port),
          auth: {
            username: username,
            password: password
          }
        }
      };
  
      const start = new Date().getTime();
      axios.get(target, config)
        .then(() => {
          const elapsed = new Date().getTime() - start;
          workingProxies.push({
            proxy: proxy,
            speed: elapsed
          });
          callback();
        })
        .catch(() => {
          failedProxies.push(proxy);
          callback();
        });
    }, () => {
      res.send(`
        <form method="post">
          <textarea name="proxies"></textarea>
          <input type="submit">
        </form>
        <div id="workingProxies">
          <h3>Working Proxies (${workingProxies.length})</h3>
          <ul>
            ${workingProxies.map(p => `<li>${p.proxy} (${p.speed} ms)</li>`).join('')}
          </ul>
        </div>
        <div id="failedProxies">
          <h3>Failed Proxies (${failedProxies.length})</h3>
          <ul>
            ${failedProxies.map(p => `<li>${p}</li>`).join('')}
          </ul>
        </div>
      `);
    });
  });
  
  
   
app.listen(3000, () => {
    console.log('Server is running on port 3000');
  });
